services:
  spring-cqrs-chatapp-1:
    build: .
    container_name: spring-cqrs-chatapp-1
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - redis
    ports:
      - "8081:8080" # test purposes only to directly reach the instance
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      SPRING_DATA_REDIS_HOST: redis
    restart: unless-stopped
  spring-cqrs-chatapp-2:
    build: .
    container_name: spring-cqrs-chatapp-2
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - redis
    ports:
      - "8082:8080" # test purposes only to directly reach the instance
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      SPRING_DATA_REDIS_HOST: redis
    restart: unless-stopped
  spring-cqrs-chatapp-3:
    build: .
    container_name: spring-cqrs-chatapp-3
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - redis
    ports:
      - "8083:8080" # test purposes only to directly reach the instance
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      SPRING_DATA_REDIS_HOST: redis
    restart: unless-stopped
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    depends_on:
      - spring-cqrs-chatapp-1
      - spring-cqrs-chatapp-2
      - spring-cqrs-chatapp-3
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000  
  kafka1:
    container_name: kafka1
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:29092,INTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:29092,INTERNAL://kafka1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
  kafka2:
    container_name: kafka2
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:29093,INTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:29093,INTERNAL://kafka2:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
  kafka3:
    container_name: kafka3
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:29094,INTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:29094,INTERNAL://kafka3:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - 9090:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9093,kafka3:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181